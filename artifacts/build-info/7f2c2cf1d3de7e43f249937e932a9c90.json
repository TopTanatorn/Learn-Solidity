{
	"id": "7f2c2cf1d3de7e43f249937e932a9c90",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"IfElse.sol": {
				"content": "// SPDX-License-Identifier: TopsTanatorn\r\n\r\npragma solidity 0.8.7;\r\n\r\ncontract IfElse {\r\n    function example(int _x) external pure returns(int){\r\n        if(_x > 20) return 1;\r\n        else if (_x == 20 ) return 2;\r\n        else return 3;\r\n    }\r\n    function ternary(int _x) external pure returns(uint){\r\n        return _x < 10 ? 1 : 2;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"IfElse.sol": {
				"IfElse": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "_x",
									"type": "int256"
								}
							],
							"name": "example",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "_x",
									"type": "int256"
								}
							],
							"name": "ternary",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"IfElse.sol\":70:348  contract IfElse {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"IfElse.sol\":70:348  contract IfElse {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0eeec544\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xf821d152\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"IfElse.sol\":93:246  function example(int _x) external pure returns(int){\r... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"IfElse.sol\":252:345  function ternary(int _x) external pure returns(uint){\r... */\n    tag_4:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_12\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_12:\n      tag_13\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"IfElse.sol\":93:246  function example(int _x) external pure returns(int){\r... */\n    tag_8:\n        /* \"IfElse.sol\":140:143  int */\n      0x00\n        /* \"IfElse.sol\":163:165  20 */\n      0x14\n        /* \"IfElse.sol\":158:160  _x */\n      dup3\n        /* \"IfElse.sol\":158:165  _x > 20 */\n      sgt\n        /* \"IfElse.sol\":155:238  if(_x > 20) return 1;\r... */\n      iszero\n      tag_17\n      jumpi\n        /* \"IfElse.sol\":174:175  1 */\n      0x01\n        /* \"IfElse.sol\":167:175  return 1 */\n      swap1\n      pop\n      jump(tag_16)\n        /* \"IfElse.sol\":155:238  if(_x > 20) return 1;\r... */\n    tag_17:\n        /* \"IfElse.sol\":201:203  20 */\n      0x14\n        /* \"IfElse.sol\":195:197  _x */\n      dup3\n        /* \"IfElse.sol\":195:203  _x == 20 */\n      eq\n        /* \"IfElse.sol\":191:238  if (_x == 20 ) return 2;\r... */\n      iszero\n      tag_19\n      jumpi\n        /* \"IfElse.sol\":213:214  2 */\n      0x02\n        /* \"IfElse.sol\":206:214  return 2 */\n      swap1\n      pop\n      jump(tag_16)\n        /* \"IfElse.sol\":191:238  if (_x == 20 ) return 2;\r... */\n    tag_19:\n        /* \"IfElse.sol\":237:238  3 */\n      0x03\n        /* \"IfElse.sol\":230:238  return 3 */\n      swap1\n      pop\n        /* \"IfElse.sol\":93:246  function example(int _x) external pure returns(int){\r... */\n    tag_16:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"IfElse.sol\":252:345  function ternary(int _x) external pure returns(uint){\r... */\n    tag_13:\n        /* \"IfElse.sol\":299:303  uint */\n      0x00\n        /* \"IfElse.sol\":327:329  10 */\n      0x0a\n        /* \"IfElse.sol\":322:324  _x */\n      dup3\n        /* \"IfElse.sol\":322:329  _x < 10 */\n      slt\n        /* \"IfElse.sol\":322:337  _x < 10 ? 1 : 2 */\n      tag_22\n      jumpi\n        /* \"IfElse.sol\":336:337  2 */\n      0x02\n        /* \"IfElse.sol\":322:337  _x < 10 ? 1 : 2 */\n      jump(tag_23)\n    tag_22:\n        /* \"IfElse.sol\":332:333  1 */\n      0x01\n        /* \"IfElse.sol\":322:337  _x < 10 ? 1 : 2 */\n    tag_23:\n        /* \"IfElse.sol\":315:337  return _x < 10 ? 1 : 2 */\n      0xff\n      and\n      swap1\n      pop\n        /* \"IfElse.sol\":252:345  function ternary(int _x) external pure returns(uint){\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:144   */\n    tag_25:\n        /* \"#utility.yul\":52:57   */\n      0x00\n        /* \"#utility.yul\":90:96   */\n      dup2\n        /* \"#utility.yul\":77:97   */\n      calldataload\n        /* \"#utility.yul\":68:97   */\n      swap1\n      pop\n        /* \"#utility.yul\":106:138   */\n      tag_27\n        /* \"#utility.yul\":132:137   */\n      dup2\n        /* \"#utility.yul\":106:138   */\n      tag_28\n      jump\t// in\n    tag_27:\n        /* \"#utility.yul\":7:144   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":150:477   */\n    tag_7:\n        /* \"#utility.yul\":208:214   */\n      0x00\n        /* \"#utility.yul\":257:259   */\n      0x20\n        /* \"#utility.yul\":245:254   */\n      dup3\n        /* \"#utility.yul\":236:243   */\n      dup5\n        /* \"#utility.yul\":232:255   */\n      sub\n        /* \"#utility.yul\":228:260   */\n      slt\n        /* \"#utility.yul\":225:344   */\n      iszero\n      tag_30\n      jumpi\n        /* \"#utility.yul\":263:342   */\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n        /* \"#utility.yul\":225:344   */\n    tag_30:\n        /* \"#utility.yul\":383:384   */\n      0x00\n        /* \"#utility.yul\":408:460   */\n      tag_33\n        /* \"#utility.yul\":452:459   */\n      dup5\n        /* \"#utility.yul\":443:449   */\n      dup3\n        /* \"#utility.yul\":432:441   */\n      dup6\n        /* \"#utility.yul\":428:450   */\n      add\n        /* \"#utility.yul\":408:460   */\n      tag_25\n      jump\t// in\n    tag_33:\n        /* \"#utility.yul\":398:460   */\n      swap2\n      pop\n        /* \"#utility.yul\":354:470   */\n      pop\n        /* \"#utility.yul\":150:477   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":483:598   */\n    tag_34:\n        /* \"#utility.yul\":568:591   */\n      tag_36\n        /* \"#utility.yul\":585:590   */\n      dup2\n        /* \"#utility.yul\":568:591   */\n      tag_37\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":563:566   */\n      dup3\n        /* \"#utility.yul\":556:592   */\n      mstore\n        /* \"#utility.yul\":483:598   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":604:722   */\n    tag_38:\n        /* \"#utility.yul\":691:715   */\n      tag_40\n        /* \"#utility.yul\":709:714   */\n      dup2\n        /* \"#utility.yul\":691:715   */\n      tag_41\n      jump\t// in\n    tag_40:\n        /* \"#utility.yul\":686:689   */\n      dup3\n        /* \"#utility.yul\":679:716   */\n      mstore\n        /* \"#utility.yul\":604:722   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":728:946   */\n    tag_10:\n        /* \"#utility.yul\":819:823   */\n      0x00\n        /* \"#utility.yul\":857:859   */\n      0x20\n        /* \"#utility.yul\":846:855   */\n      dup3\n        /* \"#utility.yul\":842:860   */\n      add\n        /* \"#utility.yul\":834:860   */\n      swap1\n      pop\n        /* \"#utility.yul\":870:939   */\n      tag_43\n        /* \"#utility.yul\":936:937   */\n      0x00\n        /* \"#utility.yul\":925:934   */\n      dup4\n        /* \"#utility.yul\":921:938   */\n      add\n        /* \"#utility.yul\":912:918   */\n      dup5\n        /* \"#utility.yul\":870:939   */\n      tag_34\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":728:946   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":952:1174   */\n    tag_15:\n        /* \"#utility.yul\":1045:1049   */\n      0x00\n        /* \"#utility.yul\":1083:1085   */\n      0x20\n        /* \"#utility.yul\":1072:1081   */\n      dup3\n        /* \"#utility.yul\":1068:1086   */\n      add\n        /* \"#utility.yul\":1060:1086   */\n      swap1\n      pop\n        /* \"#utility.yul\":1096:1167   */\n      tag_45\n        /* \"#utility.yul\":1164:1165   */\n      0x00\n        /* \"#utility.yul\":1153:1162   */\n      dup4\n        /* \"#utility.yul\":1149:1166   */\n      add\n        /* \"#utility.yul\":1140:1146   */\n      dup5\n        /* \"#utility.yul\":1096:1167   */\n      tag_38\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":952:1174   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1261:1337   */\n    tag_37:\n        /* \"#utility.yul\":1297:1304   */\n      0x00\n        /* \"#utility.yul\":1326:1331   */\n      dup2\n        /* \"#utility.yul\":1315:1331   */\n      swap1\n      pop\n        /* \"#utility.yul\":1261:1337   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1343:1420   */\n    tag_41:\n        /* \"#utility.yul\":1380:1387   */\n      0x00\n        /* \"#utility.yul\":1409:1414   */\n      dup2\n        /* \"#utility.yul\":1398:1414   */\n      swap1\n      pop\n        /* \"#utility.yul\":1343:1420   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1549:1666   */\n    tag_32:\n        /* \"#utility.yul\":1658:1659   */\n      0x00\n        /* \"#utility.yul\":1655:1656   */\n      dup1\n        /* \"#utility.yul\":1648:1660   */\n      revert\n        /* \"#utility.yul\":1672:1792   */\n    tag_28:\n        /* \"#utility.yul\":1744:1767   */\n      tag_54\n        /* \"#utility.yul\":1761:1766   */\n      dup2\n        /* \"#utility.yul\":1744:1767   */\n      tag_37\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":1737:1742   */\n      dup2\n        /* \"#utility.yul\":1734:1768   */\n      eq\n        /* \"#utility.yul\":1724:1786   */\n      tag_55\n      jumpi\n        /* \"#utility.yul\":1782:1783   */\n      0x00\n        /* \"#utility.yul\":1779:1780   */\n      dup1\n        /* \"#utility.yul\":1772:1784   */\n      revert\n        /* \"#utility.yul\":1724:1786   */\n    tag_55:\n        /* \"#utility.yul\":1672:1792   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122022d24440f0705a1225032aff545fde333fb3b3ad90c7cdd2a1d4e8632e7dd55764736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506101e5806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80630eeec5441461003b578063f821d1521461006b575b600080fd5b610055600480360381019061005091906100fe565b61009b565b6040516100629190610149565b60405180910390f35b610085600480360381019061008091906100fe565b6100cb565b6040516100929190610164565b60405180910390f35b600060148213156100af57600190506100c6565b60148214156100c157600290506100c6565b600390505b919050565b6000600a82126100dc5760026100df565b60015b60ff169050919050565b6000813590506100f881610198565b92915050565b60006020828403121561011457610113610193565b5b6000610122848285016100e9565b91505092915050565b6101348161017f565b82525050565b61014381610189565b82525050565b600060208201905061015e600083018461012b565b92915050565b6000602082019050610179600083018461013a565b92915050565b6000819050919050565b6000819050919050565b600080fd5b6101a18161017f565b81146101ac57600080fd5b5056fea264697066735822122022d24440f0705a1225032aff545fde333fb3b3ad90c7cdd2a1d4e8632e7dd55764736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E5 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xEEEC544 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xF821D152 EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0xFE JUMP JUMPDEST PUSH2 0x9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x149 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x85 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x80 SWAP2 SWAP1 PUSH2 0xFE JUMP JUMPDEST PUSH2 0xCB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x92 SWAP2 SWAP1 PUSH2 0x164 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x14 DUP3 SGT ISZERO PUSH2 0xAF JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xC6 JUMP JUMPDEST PUSH1 0x14 DUP3 EQ ISZERO PUSH2 0xC1 JUMPI PUSH1 0x2 SWAP1 POP PUSH2 0xC6 JUMP JUMPDEST PUSH1 0x3 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA DUP3 SLT PUSH2 0xDC JUMPI PUSH1 0x2 PUSH2 0xDF JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF8 DUP2 PUSH2 0x198 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x114 JUMPI PUSH2 0x113 PUSH2 0x193 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x122 DUP5 DUP3 DUP6 ADD PUSH2 0xE9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x134 DUP2 PUSH2 0x17F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x143 DUP2 PUSH2 0x189 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x12B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x179 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A1 DUP2 PUSH2 0x17F JUMP JUMPDEST DUP2 EQ PUSH2 0x1AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 0xD2 DIFFICULTY BLOCKHASH CREATE PUSH17 0x5A1225032AFF545FDE333FB3B3AD90C7CD 0xD2 LOG1 0xD4 0xE8 PUSH4 0x2E7DD557 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "70:278:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@example_23": {
									"entryPoint": 155,
									"id": 23,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@ternary_38": {
									"entryPoint": 203,
									"id": 38,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_int256": {
									"entryPoint": 233,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_int256": {
									"entryPoint": 254,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_int256_to_t_int256_fromStack": {
									"entryPoint": 299,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 314,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed": {
									"entryPoint": 329,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 356,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_int256": {
									"entryPoint": 383,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 393,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 403,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_int256": {
									"entryPoint": 408,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1795:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "58:86:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "68:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "90:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "77:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "77:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "68:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "132:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "106:25:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "106:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "106:32:1"
														}
													]
												},
												"name": "abi_decode_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "36:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "44:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "52:5:1",
														"type": ""
													}
												],
												"src": "7:137:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "215:262:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "261:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "263:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "263:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "263:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "236:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "245:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "232:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "232:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "257:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "228:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "228:32:1"
															},
															"nodeType": "YulIf",
															"src": "225:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "354:116:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "369:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "383:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "373:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "398:62:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "432:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "443:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "428:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "428:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "452:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int256",
																			"nodeType": "YulIdentifier",
																			"src": "408:19:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "408:52:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "398:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "185:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "196:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "208:6:1",
														"type": ""
													}
												],
												"src": "150:327:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:52:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "563:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "585:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_int256",
																			"nodeType": "YulIdentifier",
																			"src": "568:16:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "568:23:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "556:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "556:36:1"
														}
													]
												},
												"name": "abi_encode_t_int256_to_t_int256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "534:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "541:3:1",
														"type": ""
													}
												],
												"src": "483:115:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "669:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "686:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "709:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "691:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "691:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "679:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "679:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "679:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "657:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "664:3:1",
														"type": ""
													}
												],
												"src": "604:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "824:122:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "834:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "846:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "857:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "842:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "842:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "834:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "912:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "925:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "936:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "921:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "921:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int256_to_t_int256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "870:41:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "870:69:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "870:69:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "796:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "808:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "819:4:1",
														"type": ""
													}
												],
												"src": "728:218:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1050:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1060:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1072:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1083:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1068:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1068:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1060:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1140:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1153:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1164:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1149:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1149:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1096:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1096:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1096:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1022:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1034:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1045:4:1",
														"type": ""
													}
												],
												"src": "952:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1220:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1230:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1246:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1240:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1240:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1230:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1213:6:1",
														"type": ""
													}
												],
												"src": "1180:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1305:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1315:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1326:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1315:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1287:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1297:7:1",
														"type": ""
													}
												],
												"src": "1261:76:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1388:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1398:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1409:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1398:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1370:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1380:7:1",
														"type": ""
													}
												],
												"src": "1343:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1515:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1532:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1535:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1525:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1525:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1525:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1426:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1638:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1655:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1658:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1648:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1648:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1648:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1549:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1714:78:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1770:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1779:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1782:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1772:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1772:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1772:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1737:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1761:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int256",
																					"nodeType": "YulIdentifier",
																					"src": "1744:16:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1744:23:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1734:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1734:34:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1727:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1727:42:1"
															},
															"nodeType": "YulIf",
															"src": "1724:62:1"
														}
													]
												},
												"name": "validator_revert_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1707:5:1",
														"type": ""
													}
												],
												"src": "1672:120:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_int256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_tuple_t_int256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_int256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c80630eeec5441461003b578063f821d1521461006b575b600080fd5b610055600480360381019061005091906100fe565b61009b565b6040516100629190610149565b60405180910390f35b610085600480360381019061008091906100fe565b6100cb565b6040516100929190610164565b60405180910390f35b600060148213156100af57600190506100c6565b60148214156100c157600290506100c6565b600390505b919050565b6000600a82126100dc5760026100df565b60015b60ff169050919050565b6000813590506100f881610198565b92915050565b60006020828403121561011457610113610193565b5b6000610122848285016100e9565b91505092915050565b6101348161017f565b82525050565b61014381610189565b82525050565b600060208201905061015e600083018461012b565b92915050565b6000602082019050610179600083018461013a565b92915050565b6000819050919050565b6000819050919050565b600080fd5b6101a18161017f565b81146101ac57600080fd5b5056fea264697066735822122022d24440f0705a1225032aff545fde333fb3b3ad90c7cdd2a1d4e8632e7dd55764736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xEEEC544 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xF821D152 EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0xFE JUMP JUMPDEST PUSH2 0x9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x149 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x85 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x80 SWAP2 SWAP1 PUSH2 0xFE JUMP JUMPDEST PUSH2 0xCB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x92 SWAP2 SWAP1 PUSH2 0x164 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x14 DUP3 SGT ISZERO PUSH2 0xAF JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xC6 JUMP JUMPDEST PUSH1 0x14 DUP3 EQ ISZERO PUSH2 0xC1 JUMPI PUSH1 0x2 SWAP1 POP PUSH2 0xC6 JUMP JUMPDEST PUSH1 0x3 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA DUP3 SLT PUSH2 0xDC JUMPI PUSH1 0x2 PUSH2 0xDF JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF8 DUP2 PUSH2 0x198 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x114 JUMPI PUSH2 0x113 PUSH2 0x193 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x122 DUP5 DUP3 DUP6 ADD PUSH2 0xE9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x134 DUP2 PUSH2 0x17F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x143 DUP2 PUSH2 0x189 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x12B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x179 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A1 DUP2 PUSH2 0x17F JUMP JUMPDEST DUP2 EQ PUSH2 0x1AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 0xD2 DIFFICULTY BLOCKHASH CREATE PUSH17 0x5A1225032AFF545FDE333FB3B3AD90C7CD 0xD2 LOG1 0xD4 0xE8 PUSH4 0x2E7DD557 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "70:278:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;93:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;252:93;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;93:153;140:3;163:2;158;:7;155:83;;;174:1;167:8;;;;155:83;201:2;195;:8;191:47;;;213:1;206:8;;;;191:47;237:1;230:8;;93:153;;;;:::o;252:93::-;299:4;327:2;322;:7;:15;;336:1;322:15;;;332:1;322:15;315:22;;;;252:93;;;:::o;7:137:1:-;52:5;90:6;77:20;68:29;;106:32;132:5;106:32;:::i;:::-;7:137;;;;:::o;150:327::-;208:6;257:2;245:9;236:7;232:23;228:32;225:119;;;263:79;;:::i;:::-;225:119;383:1;408:52;452:7;443:6;432:9;428:22;408:52;:::i;:::-;398:62;;354:116;150:327;;;;:::o;483:115::-;568:23;585:5;568:23;:::i;:::-;563:3;556:36;483:115;;:::o;604:118::-;691:24;709:5;691:24;:::i;:::-;686:3;679:37;604:118;;:::o;728:218::-;819:4;857:2;846:9;842:18;834:26;;870:69;936:1;925:9;921:17;912:6;870:69;:::i;:::-;728:218;;;;:::o;952:222::-;1045:4;1083:2;1072:9;1068:18;1060:26;;1096:71;1164:1;1153:9;1149:17;1140:6;1096:71;:::i;:::-;952:222;;;;:::o;1261:76::-;1297:7;1326:5;1315:16;;1261:76;;;:::o;1343:77::-;1380:7;1409:5;1398:16;;1343:77;;;:::o;1549:117::-;1658:1;1655;1648:12;1672:120;1744:23;1761:5;1744:23;:::i;:::-;1737:5;1734:34;1724:62;;1782:1;1779;1772:12;1724:62;1672:120;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "97000",
								"executionCost": "147",
								"totalCost": "97147"
							},
							"external": {
								"example(int256)": "infinite",
								"ternary(int256)": "642"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 70,
									"end": 348,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 70,
									"end": 348,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 70,
									"end": 348,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 70,
									"end": 348,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 70,
									"end": 348,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 70,
									"end": 348,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 70,
									"end": 348,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 70,
									"end": 348,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 70,
									"end": 348,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 70,
									"end": 348,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 70,
									"end": 348,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 70,
									"end": 348,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 70,
									"end": 348,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 70,
									"end": 348,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 70,
									"end": 348,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 70,
									"end": 348,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 70,
									"end": 348,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 70,
									"end": 348,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 70,
									"end": 348,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 70,
									"end": 348,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 70,
									"end": 348,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122022d24440f0705a1225032aff545fde333fb3b3ad90c7cdd2a1d4e8632e7dd55764736f6c63430008070033",
									".code": [
										{
											"begin": 70,
											"end": 348,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 70,
											"end": 348,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 70,
											"end": 348,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 70,
											"end": 348,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 70,
											"end": 348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 348,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 70,
											"end": 348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 70,
											"end": 348,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 348,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 70,
											"end": 348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 348,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 70,
											"end": 348,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 70,
											"end": 348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70,
											"end": 348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 70,
											"end": 348,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 70,
											"end": 348,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 70,
											"end": 348,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 70,
											"end": 348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 70,
											"end": 348,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 348,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 70,
											"end": 348,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 70,
											"end": 348,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 70,
											"end": 348,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 70,
											"end": 348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 348,
											"name": "PUSH",
											"source": 0,
											"value": "EEEC544"
										},
										{
											"begin": 70,
											"end": 348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 70,
											"end": 348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 70,
											"end": 348,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 348,
											"name": "PUSH",
											"source": 0,
											"value": "F821D152"
										},
										{
											"begin": 70,
											"end": 348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 70,
											"end": 348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 70,
											"end": 348,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 348,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 70,
											"end": 348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70,
											"end": 348,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 70,
											"end": 348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 348,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 93,
											"end": 246,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 93,
											"end": 246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 93,
											"end": 246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 93,
											"end": 246,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 93,
											"end": 246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 93,
											"end": 246,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 93,
											"end": 246,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 93,
											"end": 246,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 93,
											"end": 246,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 93,
											"end": 246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 93,
											"end": 246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 93,
											"end": 246,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 93,
											"end": 246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 93,
											"end": 246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 93,
											"end": 246,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 93,
											"end": 246,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 93,
											"end": 246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 93,
											"end": 246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 93,
											"end": 246,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 93,
											"end": 246,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 93,
											"end": 246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 93,
											"end": 246,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 93,
											"end": 246,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 93,
											"end": 246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 93,
											"end": 246,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 93,
											"end": 246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 93,
											"end": 246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 93,
											"end": 246,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 93,
											"end": 246,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 93,
											"end": 246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 93,
											"end": 246,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 93,
											"end": 246,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 93,
											"end": 246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 93,
											"end": 246,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 93,
											"end": 246,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 93,
											"end": 246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 93,
											"end": 246,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 252,
											"end": 345,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 252,
											"end": 345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 252,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 252,
											"end": 345,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 252,
											"end": 345,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 252,
											"end": 345,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 252,
											"end": 345,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 252,
											"end": 345,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 252,
											"end": 345,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 252,
											"end": 345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 252,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 252,
											"end": 345,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 252,
											"end": 345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 252,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 252,
											"end": 345,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 252,
											"end": 345,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 252,
											"end": 345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 252,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 252,
											"end": 345,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 252,
											"end": 345,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 252,
											"end": 345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 252,
											"end": 345,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 252,
											"end": 345,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 252,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 252,
											"end": 345,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 252,
											"end": 345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 252,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 252,
											"end": 345,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 252,
											"end": 345,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 252,
											"end": 345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 252,
											"end": 345,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 252,
											"end": 345,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 252,
											"end": 345,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 252,
											"end": 345,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 252,
											"end": 345,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 252,
											"end": 345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 252,
											"end": 345,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 93,
											"end": 246,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 93,
											"end": 246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 140,
											"end": 143,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 163,
											"end": 165,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 158,
											"end": 160,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 158,
											"end": 165,
											"name": "SGT",
											"source": 0
										},
										{
											"begin": 155,
											"end": 238,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 155,
											"end": 238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 155,
											"end": 238,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 174,
											"end": 175,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 167,
											"end": 175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 167,
											"end": 175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 167,
											"end": 175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 167,
											"end": 175,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 155,
											"end": 238,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 155,
											"end": 238,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 201,
											"end": 203,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 195,
											"end": 197,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 195,
											"end": 203,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 191,
											"end": 238,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 191,
											"end": 238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 191,
											"end": 238,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 213,
											"end": 214,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 206,
											"end": 214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 206,
											"end": 214,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 206,
											"end": 214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 206,
											"end": 214,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 191,
											"end": 238,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 191,
											"end": 238,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 237,
											"end": 238,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 230,
											"end": 238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 230,
											"end": 238,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 93,
											"end": 246,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 93,
											"end": 246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 93,
											"end": 246,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 93,
											"end": 246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 93,
											"end": 246,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 93,
											"end": 246,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 252,
											"end": 345,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 252,
											"end": 345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 299,
											"end": 303,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 327,
											"end": 329,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 322,
											"end": 324,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 322,
											"end": 329,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 322,
											"end": 337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 322,
											"end": 337,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 336,
											"end": 337,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 322,
											"end": 337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 322,
											"end": 337,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 322,
											"end": 337,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 322,
											"end": 337,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 332,
											"end": 333,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 322,
											"end": 337,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 322,
											"end": 337,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 315,
											"end": 337,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 315,
											"end": 337,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 315,
											"end": 337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 315,
											"end": 337,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 252,
											"end": 345,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 252,
											"end": 345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 252,
											"end": 345,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 252,
											"end": 345,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 144,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 7,
											"end": 144,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 52,
											"end": 57,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 96,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 77,
											"end": 97,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 68,
											"end": 97,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 68,
											"end": 97,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 106,
											"end": 138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 132,
											"end": 137,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 106,
											"end": 138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 106,
											"end": 138,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 106,
											"end": 138,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 106,
											"end": 138,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7,
											"end": 144,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 144,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 144,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 144,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 144,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 150,
											"end": 477,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 150,
											"end": 477,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 208,
											"end": 214,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 257,
											"end": 259,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 245,
											"end": 254,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 236,
											"end": 243,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 232,
											"end": 255,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 228,
											"end": 260,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 225,
											"end": 344,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 225,
											"end": 344,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 225,
											"end": 344,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 263,
											"end": 342,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 263,
											"end": 342,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 263,
											"end": 342,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 263,
											"end": 342,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 263,
											"end": 342,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 225,
											"end": 344,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 225,
											"end": 344,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 383,
											"end": 384,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 460,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 452,
											"end": 459,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 443,
											"end": 449,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 432,
											"end": 441,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 428,
											"end": 450,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 408,
											"end": 460,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 408,
											"end": 460,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 408,
											"end": 460,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 408,
											"end": 460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 398,
											"end": 460,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 398,
											"end": 460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 354,
											"end": 470,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 150,
											"end": 477,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 150,
											"end": 477,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 150,
											"end": 477,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 150,
											"end": 477,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 150,
											"end": 477,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 483,
											"end": 598,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 483,
											"end": 598,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 568,
											"end": 591,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 585,
											"end": 590,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 568,
											"end": 591,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 568,
											"end": 591,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 568,
											"end": 591,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 568,
											"end": 591,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 563,
											"end": 566,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 556,
											"end": 592,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 483,
											"end": 598,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 483,
											"end": 598,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 483,
											"end": 598,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 604,
											"end": 722,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 604,
											"end": 722,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 691,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 709,
											"end": 714,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 691,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 691,
											"end": 715,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 691,
											"end": 715,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 691,
											"end": 715,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 686,
											"end": 689,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 679,
											"end": 716,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 604,
											"end": 722,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 604,
											"end": 722,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 604,
											"end": 722,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 728,
											"end": 946,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 728,
											"end": 946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 819,
											"end": 823,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 857,
											"end": 859,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 846,
											"end": 855,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 842,
											"end": 860,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 834,
											"end": 860,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 834,
											"end": 860,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 870,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 936,
											"end": 937,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 925,
											"end": 934,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 921,
											"end": 938,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 912,
											"end": 918,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 870,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 870,
											"end": 939,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 870,
											"end": 939,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 870,
											"end": 939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 728,
											"end": 946,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 728,
											"end": 946,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 728,
											"end": 946,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 728,
											"end": 946,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 728,
											"end": 946,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 952,
											"end": 1174,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 952,
											"end": 1174,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1045,
											"end": 1049,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1083,
											"end": 1085,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1072,
											"end": 1081,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1068,
											"end": 1086,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1060,
											"end": 1086,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1060,
											"end": 1086,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1096,
											"end": 1167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1164,
											"end": 1165,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1153,
											"end": 1162,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1166,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1146,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1096,
											"end": 1167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1096,
											"end": 1167,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1096,
											"end": 1167,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1096,
											"end": 1167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 952,
											"end": 1174,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 952,
											"end": 1174,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 952,
											"end": 1174,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 952,
											"end": 1174,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 952,
											"end": 1174,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1261,
											"end": 1337,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1261,
											"end": 1337,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1326,
											"end": 1331,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1331,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1331,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1261,
											"end": 1337,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1261,
											"end": 1337,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1261,
											"end": 1337,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1261,
											"end": 1337,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1343,
											"end": 1420,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1343,
											"end": 1420,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1387,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1409,
											"end": 1414,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1398,
											"end": 1414,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1398,
											"end": 1414,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1343,
											"end": 1420,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1343,
											"end": 1420,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1343,
											"end": 1420,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1343,
											"end": 1420,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1549,
											"end": 1666,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1549,
											"end": 1666,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1658,
											"end": 1659,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1655,
											"end": 1656,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1648,
											"end": 1660,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1672,
											"end": 1792,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1672,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1767,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1761,
											"end": 1766,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1767,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1744,
											"end": 1767,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1744,
											"end": 1767,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1744,
											"end": 1767,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1737,
											"end": 1742,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1734,
											"end": 1768,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1724,
											"end": 1786,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1724,
											"end": 1786,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1782,
											"end": 1783,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1779,
											"end": 1780,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 1784,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1724,
											"end": 1786,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1724,
											"end": 1786,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1672,
											"end": 1792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1672,
											"end": 1792,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"example(int256)": "0eeec544",
							"ternary(int256)": "f821d152"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"_x\",\"type\":\"int256\"}],\"name\":\"example\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"_x\",\"type\":\"int256\"}],\"name\":\"ternary\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IfElse.sol\":\"IfElse\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IfElse.sol\":{\"keccak256\":\"0x606f327f8dca3f72676ed145017eda4ab611c451646b73cfa2bf5f95b5df2901\",\"license\":\"TopsTanatorn\",\"urls\":[\"bzz-raw://b84742ee4b8c1d8fbb4788eec1a44fc4a38be9fe96dc8cbb11e14e5d2970d189\",\"dweb:/ipfs/QmSEDLysjmNSBnV1vnY24PNdyefAnwnuFZV3vrta3ZfBjh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"IfElse.sol": {
				"ast": {
					"absolutePath": "IfElse.sol",
					"exportedSymbols": {
						"IfElse": [
							39
						]
					},
					"id": 40,
					"license": "TopsTanatorn",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "44:22:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 39,
							"linearizedBaseContracts": [
								39
							],
							"name": "IfElse",
							"nameLocation": "79:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "144:102:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 10,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 8,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "158:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3230",
														"id": 9,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "163:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_20_by_1",
															"typeString": "int_const 20"
														},
														"value": "20"
													},
													"src": "158:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 15,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 13,
															"name": "_x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "195:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "3230",
															"id": 14,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "201:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_20_by_1",
																"typeString": "int_const 20"
															},
															"value": "20"
														},
														"src": "195:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"expression": {
															"hexValue": "33",
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "237:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														},
														"functionReturnParameters": 7,
														"id": 19,
														"nodeType": "Return",
														"src": "230:8:0"
													},
													"id": 20,
													"nodeType": "IfStatement",
													"src": "191:47:0",
													"trueBody": {
														"expression": {
															"hexValue": "32",
															"id": 16,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "213:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"functionReturnParameters": 7,
														"id": 17,
														"nodeType": "Return",
														"src": "206:8:0"
													}
												},
												"id": 21,
												"nodeType": "IfStatement",
												"src": "155:83:0",
												"trueBody": {
													"expression": {
														"hexValue": "31",
														"id": 11,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "174:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"functionReturnParameters": 7,
													"id": 12,
													"nodeType": "Return",
													"src": "167:8:0"
												}
											}
										]
									},
									"functionSelector": "0eeec544",
									"id": 23,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "example",
									"nameLocation": "102:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "_x",
												"nameLocation": "114:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "110:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "110:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "109:8:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "140:3:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "140:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "139:5:0"
									},
									"scope": 39,
									"src": "93:153:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 37,
										"nodeType": "Block",
										"src": "304:41:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 32,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 30,
															"name": "_x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "322:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "3130",
															"id": 31,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "327:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"src": "322:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "32",
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "336:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "322:15:0",
													"trueExpression": {
														"hexValue": "31",
														"id": 33,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "332:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 29,
												"id": 36,
												"nodeType": "Return",
												"src": "315:22:0"
											}
										]
									},
									"functionSelector": "f821d152",
									"id": 38,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ternary",
									"nameLocation": "261:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "_x",
												"nameLocation": "273:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "269:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 24,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "269:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "268:8:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "299:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "299:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "298:6:0"
									},
									"scope": 39,
									"src": "252:93:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 40,
							"src": "70:278:0",
							"usedErrors": []
						}
					],
					"src": "44:304:0"
				},
				"id": 0
			}
		}
	}
}